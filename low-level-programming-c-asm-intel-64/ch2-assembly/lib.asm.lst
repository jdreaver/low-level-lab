     1                                 %line 1+1 lib.asm
     2                                 
     3                                 
     4                                 [section .data]
     5                                 
     6                                 [section .text]
     7                                 
     8                                 
     9                                 [global exit]
    10                                 exit:
    11 00000000 4889C7                  mov rdi, rax
    12 00000003 48C7C03C000000          mov rax, 60
    13 0000000A 0F05                    syscall
    14                                 
    15                                 
    16                                 [global strlen]
    17                                 strlen:
    18 0000000C 4831C0                  xor rax, rax
    19                                 
    20                                 .loop:
    21 0000000F 803C0700                cmp byte [rdi + rax], 0
    22                                 
    23                                 
    24                                 
    25 00000013 7403                    je .end
    26                                 
    27 00000015 48FFC0                  inc rax
    28 00000018 EBF3                    jmp .loop
    29                                 
    30                                 .end:
    31 0000001A C3                      ret
    32                                 
    33                                 
    34                                 
    35                                 [global print_string]
    36                                 print_string:
    37                                 
    38 0000001B 4989F8                  mov r8, rdi
    39                                 
    40                                 
    41 0000001E E8E4FFFFFF              call strlen
    42                                 
    43                                 
    44 00000023 4889C2                  mov rdx, rax
    45 00000026 48C7C001000000          mov rax, 1
    46 0000002D 48C7C701000000          mov rdi, 1
    47 00000034 4C89C6                  mov rsi, r8
    48 00000037 0F05                    syscall
    49                                 
    50 00000039 C3                      ret
    51                                 
    52                                 
    53                                 
    54                                 [global print_char]
    55                                 print_char:
    56                                 
    57 0000003A 57                      push rdi
    58                                 
    59                                 
    60                                 
    61 0000003B 4889E7                  mov rdi, rsp
    62 0000003E E8D3FFFFFF              call print_string
    63                                 
    64                                 
    65 00000043 4883C408                add rsp, 8
    66                                 
    67 00000047 C3                      ret
    68                                 
    69                                 [global print_newline]
    70                                 print_newline:
    71 00000048 48C7C70A000000          mov rdi, 0xA
    72 0000004F E8E1FFFFFF              call print_char
    73 00000054 C3                      ret
