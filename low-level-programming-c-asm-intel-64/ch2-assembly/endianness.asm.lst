     1                                 %line 1+1 endianness.asm
     2                                 [section .data]
     3                                 codes:
     4 00000000 303132333435363738-     db '0123456789ABCDEF'
     5 00000000 39414243444546     
     6                                 newline:
     7 00000010 0A                      db 0xA
     8                                 demo1:
     9 00000011 8877665544332211        dq 0x1122334455667788
    10                                 demo2:
    11 00000019 1122334455667788        db 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88
    12                                 [section .text]
    13                                 [global _start]
    14                                 
    15                                 print_newline:
    16 00000000 48C7C001000000          mov rax, 1
    17 00000007 48C7C701000000          mov rdi, 1
    18 0000000E 48C7C6[00000000]        mov rsi, newline
    19 00000015 48C7C201000000          mov rdx, 1
    20 0000001C 0F05                    syscall
    21 0000001E C3                      ret
    22                                 
    23                                 print_hex:
    24 0000001F 4889F8                  mov rax, rdi
    25                                 
    26                                 
    27                                 
    28 00000022 48C7C701000000          mov rdi, 1
    29 00000029 48C7C201000000          mov rdx, 1
    30                                 
    31 00000030 48C7C140000000          mov rcx, 64
    32                                 
    33                                 
    34                                 
    35                                 .loop:
    36                                 
    37                                 
    38                                 
    39 00000037 50                      push rax
    40                                 
    41 00000038 4883E904                sub rcx, 4
    42                                 
    43                                 
    44 0000003C 48D3F8                  sar rax, cl
    45 0000003F 4883E00F                and rax, 0xf
    46                                 
    47                                 
    48 00000043 488DB0[00000000]        lea rsi, [codes + rax]
    49 0000004A 48C7C001000000          mov rax, 1
    50                                 
    51 00000051 51                      push rcx
    52 00000052 0F05                    syscall
    53 00000054 59                      pop rcx
    54                                 
    55 00000055 58                      pop rax
    56 00000056 4885C9                  test rcx, rcx
    57 00000059 75DA                    jnz .loop
    58                                 
    59 0000005B C3                      ret
    60                                 
    61                                 _start:
    62                                 
    63 0000005C 488B3C25[00000000]      mov rdi, [demo1]
    64 00000064 E8B1FFFFFF              call print_hex
    65 00000069 E88DFFFFFF              call print_newline
    66                                 
    67 0000006E 488B3C25[00000000]      mov rdi, [demo2]
    68 00000076 E89FFFFFFF              call print_hex
    69 0000007B E87BFFFFFF              call print_newline
    70                                 
    71                                 
    72 00000080 48C7C03C000000          mov rax, 60
    73 00000087 4831FF                  xor rdi, rdi
    74 0000008A 0F05                    syscall
